#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FilmDBManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Videotheque_Liege")]
	public partial class BDVideothequeLiegeManagementDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBDA_Film(BDA_Film instance);
    partial void UpdateBDA_Film(BDA_Film instance);
    partial void DeleteBDA_Film(BDA_Film instance);
    partial void InsertBDA_FilmGenre(BDA_FilmGenre instance);
    partial void UpdateBDA_FilmGenre(BDA_FilmGenre instance);
    partial void DeleteBDA_FilmGenre(BDA_FilmGenre instance);
    partial void InsertBDA_Genre(BDA_Genre instance);
    partial void UpdateBDA_Genre(BDA_Genre instance);
    partial void DeleteBDA_Genre(BDA_Genre instance);
    partial void InsertBDA_Realisateur(BDA_Realisateur instance);
    partial void UpdateBDA_Realisateur(BDA_Realisateur instance);
    partial void DeleteBDA_Realisateur(BDA_Realisateur instance);
    partial void InsertBDA_FilmRealisateur(BDA_FilmRealisateur instance);
    partial void UpdateBDA_FilmRealisateur(BDA_FilmRealisateur instance);
    partial void DeleteBDA_FilmRealisateur(BDA_FilmRealisateur instance);
    partial void InsertBDA_New(BDA_New instance);
    partial void UpdateBDA_New(BDA_New instance);
    partial void DeleteBDA_New(BDA_New instance);
    #endregion
		
		public BDVideothequeLiegeManagementDataContext() : 
				base(global::FilmDBManagement.Properties.Settings.Default.BD_Videotheque_LiegeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BDVideothequeLiegeManagementDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDVideothequeLiegeManagementDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDVideothequeLiegeManagementDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BDVideothequeLiegeManagementDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BDA_Film> BDA_Films
		{
			get
			{
				return this.GetTable<BDA_Film>();
			}
		}
		
		public System.Data.Linq.Table<BDA_FilmGenre> BDA_FilmGenres
		{
			get
			{
				return this.GetTable<BDA_FilmGenre>();
			}
		}
		
		public System.Data.Linq.Table<BDA_Genre> BDA_Genres
		{
			get
			{
				return this.GetTable<BDA_Genre>();
			}
		}
		
		public System.Data.Linq.Table<BDA_Realisateur> BDA_Realisateurs
		{
			get
			{
				return this.GetTable<BDA_Realisateur>();
			}
		}
		
		public System.Data.Linq.Table<BDA_FilmRealisateur> BDA_FilmRealisateurs
		{
			get
			{
				return this.GetTable<BDA_FilmRealisateur>();
			}
		}
		
		public System.Data.Linq.Table<BDA_New> BDA_News
		{
			get
			{
				return this.GetTable<BDA_New>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_Film")]
	public partial class BDA_Film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _title;
		
		private string _original_title;
		
		private int _runtime;
		
		private string _posterpath;
		
		private string _status;
		
		private EntitySet<BDA_FilmGenre> _BDA_FilmGenres;
		
		private EntitySet<BDA_FilmRealisateur> _BDA_FilmRealisateurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onoriginal_titleChanging(string value);
    partial void Onoriginal_titleChanged();
    partial void OnruntimeChanging(int value);
    partial void OnruntimeChanged();
    partial void OnposterpathChanging(string value);
    partial void OnposterpathChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public BDA_Film()
		{
			this._BDA_FilmGenres = new EntitySet<BDA_FilmGenre>(new Action<BDA_FilmGenre>(this.attach_BDA_FilmGenres), new Action<BDA_FilmGenre>(this.detach_BDA_FilmGenres));
			this._BDA_FilmRealisateurs = new EntitySet<BDA_FilmRealisateur>(new Action<BDA_FilmRealisateur>(this.attach_BDA_FilmRealisateurs), new Action<BDA_FilmRealisateur>(this.detach_BDA_FilmRealisateurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string original_title
		{
			get
			{
				return this._original_title;
			}
			set
			{
				if ((this._original_title != value))
				{
					this.Onoriginal_titleChanging(value);
					this.SendPropertyChanging();
					this._original_title = value;
					this.SendPropertyChanged("original_title");
					this.Onoriginal_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runtime", DbType="Int NOT NULL")]
		public int runtime
		{
			get
			{
				return this._runtime;
			}
			set
			{
				if ((this._runtime != value))
				{
					this.OnruntimeChanging(value);
					this.SendPropertyChanging();
					this._runtime = value;
					this.SendPropertyChanged("runtime");
					this.OnruntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posterpath", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string posterpath
		{
			get
			{
				return this._posterpath;
			}
			set
			{
				if ((this._posterpath != value))
				{
					this.OnposterpathChanging(value);
					this.SendPropertyChanging();
					this._posterpath = value;
					this.SendPropertyChanged("posterpath");
					this.OnposterpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Film_BDA_FilmGenre", Storage="_BDA_FilmGenres", ThisKey="ID", OtherKey="IDFilm")]
		public EntitySet<BDA_FilmGenre> BDA_FilmGenres
		{
			get
			{
				return this._BDA_FilmGenres;
			}
			set
			{
				this._BDA_FilmGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Film_BDA_FilmRealisateur", Storage="_BDA_FilmRealisateurs", ThisKey="ID", OtherKey="IDFilm")]
		public EntitySet<BDA_FilmRealisateur> BDA_FilmRealisateurs
		{
			get
			{
				return this._BDA_FilmRealisateurs;
			}
			set
			{
				this._BDA_FilmRealisateurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BDA_FilmGenres(BDA_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Film = this;
		}
		
		private void detach_BDA_FilmGenres(BDA_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Film = null;
		}
		
		private void attach_BDA_FilmRealisateurs(BDA_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Film = this;
		}
		
		private void detach_BDA_FilmRealisateurs(BDA_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Film = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_FilmGenre")]
	public partial class BDA_FilmGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilm;
		
		private int _IDGenre;
		
		private EntityRef<BDA_Film> _BDA_Film;
		
		private EntityRef<BDA_Genre> _BDA_Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilmChanging(int value);
    partial void OnIDFilmChanged();
    partial void OnIDGenreChanging(int value);
    partial void OnIDGenreChanged();
    #endregion
		
		public BDA_FilmGenre()
		{
			this._BDA_Film = default(EntityRef<BDA_Film>);
			this._BDA_Genre = default(EntityRef<BDA_Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFilm
		{
			get
			{
				return this._IDFilm;
			}
			set
			{
				if ((this._IDFilm != value))
				{
					if (this._BDA_Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFilmChanging(value);
					this.SendPropertyChanging();
					this._IDFilm = value;
					this.SendPropertyChanged("IDFilm");
					this.OnIDFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGenre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGenre
		{
			get
			{
				return this._IDGenre;
			}
			set
			{
				if ((this._IDGenre != value))
				{
					if (this._BDA_Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGenreChanging(value);
					this.SendPropertyChanging();
					this._IDGenre = value;
					this.SendPropertyChanged("IDGenre");
					this.OnIDGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Film_BDA_FilmGenre", Storage="_BDA_Film", ThisKey="IDFilm", OtherKey="ID", IsForeignKey=true)]
		public BDA_Film BDA_Film
		{
			get
			{
				return this._BDA_Film.Entity;
			}
			set
			{
				BDA_Film previousValue = this._BDA_Film.Entity;
				if (((previousValue != value) 
							|| (this._BDA_Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BDA_Film.Entity = null;
						previousValue.BDA_FilmGenres.Remove(this);
					}
					this._BDA_Film.Entity = value;
					if ((value != null))
					{
						value.BDA_FilmGenres.Add(this);
						this._IDFilm = value.ID;
					}
					else
					{
						this._IDFilm = default(int);
					}
					this.SendPropertyChanged("BDA_Film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Genre_BDA_FilmGenre", Storage="_BDA_Genre", ThisKey="IDGenre", OtherKey="Id", IsForeignKey=true)]
		public BDA_Genre BDA_Genre
		{
			get
			{
				return this._BDA_Genre.Entity;
			}
			set
			{
				BDA_Genre previousValue = this._BDA_Genre.Entity;
				if (((previousValue != value) 
							|| (this._BDA_Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BDA_Genre.Entity = null;
						previousValue.BDA_FilmGenres.Remove(this);
					}
					this._BDA_Genre.Entity = value;
					if ((value != null))
					{
						value.BDA_FilmGenres.Add(this);
						this._IDGenre = value.Id;
					}
					else
					{
						this._IDGenre = default(int);
					}
					this.SendPropertyChanged("BDA_Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_Genre")]
	public partial class BDA_Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<BDA_FilmGenre> _BDA_FilmGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public BDA_Genre()
		{
			this._BDA_FilmGenres = new EntitySet<BDA_FilmGenre>(new Action<BDA_FilmGenre>(this.attach_BDA_FilmGenres), new Action<BDA_FilmGenre>(this.detach_BDA_FilmGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Genre_BDA_FilmGenre", Storage="_BDA_FilmGenres", ThisKey="Id", OtherKey="IDGenre")]
		public EntitySet<BDA_FilmGenre> BDA_FilmGenres
		{
			get
			{
				return this._BDA_FilmGenres;
			}
			set
			{
				this._BDA_FilmGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BDA_FilmGenres(BDA_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Genre = this;
		}
		
		private void detach_BDA_FilmGenres(BDA_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_Realisateur")]
	public partial class BDA_Realisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<BDA_FilmRealisateur> _BDA_FilmRealisateurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public BDA_Realisateur()
		{
			this._BDA_FilmRealisateurs = new EntitySet<BDA_FilmRealisateur>(new Action<BDA_FilmRealisateur>(this.attach_BDA_FilmRealisateurs), new Action<BDA_FilmRealisateur>(this.detach_BDA_FilmRealisateurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Realisateur_BDA_FilmRealisateur", Storage="_BDA_FilmRealisateurs", ThisKey="Id", OtherKey="IDReal")]
		public EntitySet<BDA_FilmRealisateur> BDA_FilmRealisateurs
		{
			get
			{
				return this._BDA_FilmRealisateurs;
			}
			set
			{
				this._BDA_FilmRealisateurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BDA_FilmRealisateurs(BDA_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Realisateur = this;
		}
		
		private void detach_BDA_FilmRealisateurs(BDA_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BDA_Realisateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_FilmRealisateur")]
	public partial class BDA_FilmRealisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilm;
		
		private int _IDReal;
		
		private EntityRef<BDA_Film> _BDA_Film;
		
		private EntityRef<BDA_Realisateur> _BDA_Realisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilmChanging(int value);
    partial void OnIDFilmChanged();
    partial void OnIDRealChanging(int value);
    partial void OnIDRealChanged();
    #endregion
		
		public BDA_FilmRealisateur()
		{
			this._BDA_Film = default(EntityRef<BDA_Film>);
			this._BDA_Realisateur = default(EntityRef<BDA_Realisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFilm
		{
			get
			{
				return this._IDFilm;
			}
			set
			{
				if ((this._IDFilm != value))
				{
					if (this._BDA_Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFilmChanging(value);
					this.SendPropertyChanging();
					this._IDFilm = value;
					this.SendPropertyChanged("IDFilm");
					this.OnIDFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDReal
		{
			get
			{
				return this._IDReal;
			}
			set
			{
				if ((this._IDReal != value))
				{
					if (this._BDA_Realisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRealChanging(value);
					this.SendPropertyChanging();
					this._IDReal = value;
					this.SendPropertyChanged("IDReal");
					this.OnIDRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Film_BDA_FilmRealisateur", Storage="_BDA_Film", ThisKey="IDFilm", OtherKey="ID", IsForeignKey=true)]
		public BDA_Film BDA_Film
		{
			get
			{
				return this._BDA_Film.Entity;
			}
			set
			{
				BDA_Film previousValue = this._BDA_Film.Entity;
				if (((previousValue != value) 
							|| (this._BDA_Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BDA_Film.Entity = null;
						previousValue.BDA_FilmRealisateurs.Remove(this);
					}
					this._BDA_Film.Entity = value;
					if ((value != null))
					{
						value.BDA_FilmRealisateurs.Add(this);
						this._IDFilm = value.ID;
					}
					else
					{
						this._IDFilm = default(int);
					}
					this.SendPropertyChanged("BDA_Film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BDA_Realisateur_BDA_FilmRealisateur", Storage="_BDA_Realisateur", ThisKey="IDReal", OtherKey="Id", IsForeignKey=true)]
		public BDA_Realisateur BDA_Realisateur
		{
			get
			{
				return this._BDA_Realisateur.Entity;
			}
			set
			{
				BDA_Realisateur previousValue = this._BDA_Realisateur.Entity;
				if (((previousValue != value) 
							|| (this._BDA_Realisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BDA_Realisateur.Entity = null;
						previousValue.BDA_FilmRealisateurs.Remove(this);
					}
					this._BDA_Realisateur.Entity = value;
					if ((value != null))
					{
						value.BDA_FilmRealisateurs.Add(this);
						this._IDReal = value.Id;
					}
					else
					{
						this._IDReal = default(int);
					}
					this.SendPropertyChanged("BDA_Realisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BDA_News")]
	public partial class BDA_New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Titre;
		
		private string _Contenu;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifDate;
		
		private System.Data.Linq.Binary _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitreChanging(string value);
    partial void OnTitreChanged();
    partial void OnContenuChanging(string value);
    partial void OnContenuChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifDateChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    #endregion
		
		public BDA_New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titre
		{
			get
			{
				return this._Titre;
			}
			set
			{
				if ((this._Titre != value))
				{
					this.OnTitreChanging(value);
					this.SendPropertyChanging();
					this._Titre = value;
					this.SendPropertyChanged("Titre");
					this.OnTitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contenu", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contenu
		{
			get
			{
				return this._Contenu;
			}
			set
			{
				if ((this._Contenu != value))
				{
					this.OnContenuChanging(value);
					this.SendPropertyChanging();
					this._Contenu = value;
					this.SendPropertyChanged("Contenu");
					this.OnContenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifDate
		{
			get
			{
				return this._ModifDate;
			}
			set
			{
				if ((this._ModifDate != value))
				{
					this.OnModifDateChanging(value);
					this.SendPropertyChanging();
					this._ModifDate = value;
					this.SendPropertyChanged("ModifDate");
					this.OnModifDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
