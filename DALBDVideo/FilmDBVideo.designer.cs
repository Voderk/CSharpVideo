#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALBDVideo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BD_Videotheque_Liege")]
	public partial class FilmDBVideoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBD_Actor(BD_Actor instance);
    partial void UpdateBD_Actor(BD_Actor instance);
    partial void DeleteBD_Actor(BD_Actor instance);
    partial void InsertBD_Film(BD_Film instance);
    partial void UpdateBD_Film(BD_Film instance);
    partial void DeleteBD_Film(BD_Film instance);
    partial void InsertBD_FilmActor(BD_FilmActor instance);
    partial void UpdateBD_FilmActor(BD_FilmActor instance);
    partial void DeleteBD_FilmActor(BD_FilmActor instance);
    partial void InsertBD_FilmGenre(BD_FilmGenre instance);
    partial void UpdateBD_FilmGenre(BD_FilmGenre instance);
    partial void DeleteBD_FilmGenre(BD_FilmGenre instance);
    partial void InsertBD_FilmRealisateur(BD_FilmRealisateur instance);
    partial void UpdateBD_FilmRealisateur(BD_FilmRealisateur instance);
    partial void DeleteBD_FilmRealisateur(BD_FilmRealisateur instance);
    partial void InsertBD_Genre(BD_Genre instance);
    partial void UpdateBD_Genre(BD_Genre instance);
    partial void DeleteBD_Genre(BD_Genre instance);
    partial void InsertBD_New(BD_New instance);
    partial void UpdateBD_New(BD_New instance);
    partial void DeleteBD_New(BD_New instance);
    partial void InsertBD_Realisateur(BD_Realisateur instance);
    partial void UpdateBD_Realisateur(BD_Realisateur instance);
    partial void DeleteBD_Realisateur(BD_Realisateur instance);
    partial void InsertBD_STATUT(BD_STATUT instance);
    partial void UpdateBD_STATUT(BD_STATUT instance);
    partial void DeleteBD_STATUT(BD_STATUT instance);
    #endregion
		
		public FilmDBVideoDataContext() : 
				base(global::DALBDVideo.Properties.Settings.Default.BD_Videotheque_LiegeConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public FilmDBVideoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilmDBVideoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilmDBVideoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FilmDBVideoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BD_Actor> BD_Actors
		{
			get
			{
				return this.GetTable<BD_Actor>();
			}
		}
		
		public System.Data.Linq.Table<BD_Film> BD_Films
		{
			get
			{
				return this.GetTable<BD_Film>();
			}
		}
		
		public System.Data.Linq.Table<BD_FilmActor> BD_FilmActors
		{
			get
			{
				return this.GetTable<BD_FilmActor>();
			}
		}
		
		public System.Data.Linq.Table<BD_FilmGenre> BD_FilmGenres
		{
			get
			{
				return this.GetTable<BD_FilmGenre>();
			}
		}
		
		public System.Data.Linq.Table<BD_FilmRealisateur> BD_FilmRealisateurs
		{
			get
			{
				return this.GetTable<BD_FilmRealisateur>();
			}
		}
		
		public System.Data.Linq.Table<BD_Genre> BD_Genres
		{
			get
			{
				return this.GetTable<BD_Genre>();
			}
		}
		
		public System.Data.Linq.Table<BD_New> BD_News
		{
			get
			{
				return this.GetTable<BD_New>();
			}
		}
		
		public System.Data.Linq.Table<BD_Realisateur> BD_Realisateurs
		{
			get
			{
				return this.GetTable<BD_Realisateur>();
			}
		}
		
		public System.Data.Linq.Table<BD_STATUT> BD_STATUTs
		{
			get
			{
				return this.GetTable<BD_STATUT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_Actor")]
	public partial class BD_Actor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<BD_FilmActor> _BD_FilmActors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BD_Actor()
		{
			this._BD_FilmActors = new EntitySet<BD_FilmActor>(new Action<BD_FilmActor>(this.attach_BD_FilmActors), new Action<BD_FilmActor>(this.detach_BD_FilmActors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Actor_BD_FilmActor", Storage="_BD_FilmActors", ThisKey="ID", OtherKey="IDActor")]
		public EntitySet<BD_FilmActor> BD_FilmActors
		{
			get
			{
				return this._BD_FilmActors;
			}
			set
			{
				this._BD_FilmActors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BD_FilmActors(BD_FilmActor entity)
		{
			this.SendPropertyChanging();
			entity.BD_Actor = this;
		}
		
		private void detach_BD_FilmActors(BD_FilmActor entity)
		{
			this.SendPropertyChanging();
			entity.BD_Actor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_Film")]
	public partial class BD_Film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _title;
		
		private string _original_title;
		
		private int _runtime;
		
		private string _posterpath;
		
		private System.Nullable<int> _status;
		
		private EntitySet<BD_FilmActor> _BD_FilmActors;
		
		private EntitySet<BD_FilmGenre> _BD_FilmGenres;
		
		private EntitySet<BD_FilmRealisateur> _BD_FilmRealisateurs;
		
		private EntityRef<BD_STATUT> _BD_STATUT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onoriginal_titleChanging(string value);
    partial void Onoriginal_titleChanged();
    partial void OnruntimeChanging(int value);
    partial void OnruntimeChanged();
    partial void OnposterpathChanging(string value);
    partial void OnposterpathChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public BD_Film()
		{
			this._BD_FilmActors = new EntitySet<BD_FilmActor>(new Action<BD_FilmActor>(this.attach_BD_FilmActors), new Action<BD_FilmActor>(this.detach_BD_FilmActors));
			this._BD_FilmGenres = new EntitySet<BD_FilmGenre>(new Action<BD_FilmGenre>(this.attach_BD_FilmGenres), new Action<BD_FilmGenre>(this.detach_BD_FilmGenres));
			this._BD_FilmRealisateurs = new EntitySet<BD_FilmRealisateur>(new Action<BD_FilmRealisateur>(this.attach_BD_FilmRealisateurs), new Action<BD_FilmRealisateur>(this.detach_BD_FilmRealisateurs));
			this._BD_STATUT = default(EntityRef<BD_STATUT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_original_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string original_title
		{
			get
			{
				return this._original_title;
			}
			set
			{
				if ((this._original_title != value))
				{
					this.Onoriginal_titleChanging(value);
					this.SendPropertyChanging();
					this._original_title = value;
					this.SendPropertyChanged("original_title");
					this.Onoriginal_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runtime", DbType="Int NOT NULL")]
		public int runtime
		{
			get
			{
				return this._runtime;
			}
			set
			{
				if ((this._runtime != value))
				{
					this.OnruntimeChanging(value);
					this.SendPropertyChanging();
					this._runtime = value;
					this.SendPropertyChanged("runtime");
					this.OnruntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_posterpath", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string posterpath
		{
			get
			{
				return this._posterpath;
			}
			set
			{
				if ((this._posterpath != value))
				{
					this.OnposterpathChanging(value);
					this.SendPropertyChanging();
					this._posterpath = value;
					this.SendPropertyChanged("posterpath");
					this.OnposterpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					if (this._BD_STATUT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmActor", Storage="_BD_FilmActors", ThisKey="ID", OtherKey="IDFilm")]
		public EntitySet<BD_FilmActor> BD_FilmActors
		{
			get
			{
				return this._BD_FilmActors;
			}
			set
			{
				this._BD_FilmActors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmGenre", Storage="_BD_FilmGenres", ThisKey="ID", OtherKey="IDFilm")]
		public EntitySet<BD_FilmGenre> BD_FilmGenres
		{
			get
			{
				return this._BD_FilmGenres;
			}
			set
			{
				this._BD_FilmGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmRealisateur", Storage="_BD_FilmRealisateurs", ThisKey="ID", OtherKey="IDFilm")]
		public EntitySet<BD_FilmRealisateur> BD_FilmRealisateurs
		{
			get
			{
				return this._BD_FilmRealisateurs;
			}
			set
			{
				this._BD_FilmRealisateurs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_STATUT_BD_Film", Storage="_BD_STATUT", ThisKey="status", OtherKey="ID", IsForeignKey=true)]
		public BD_STATUT BD_STATUT
		{
			get
			{
				return this._BD_STATUT.Entity;
			}
			set
			{
				BD_STATUT previousValue = this._BD_STATUT.Entity;
				if (((previousValue != value) 
							|| (this._BD_STATUT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_STATUT.Entity = null;
						previousValue.BD_Films.Remove(this);
					}
					this._BD_STATUT.Entity = value;
					if ((value != null))
					{
						value.BD_Films.Add(this);
						this._status = value.ID;
					}
					else
					{
						this._status = default(Nullable<int>);
					}
					this.SendPropertyChanged("BD_STATUT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BD_FilmActors(BD_FilmActor entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = this;
		}
		
		private void detach_BD_FilmActors(BD_FilmActor entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = null;
		}
		
		private void attach_BD_FilmGenres(BD_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = this;
		}
		
		private void detach_BD_FilmGenres(BD_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = null;
		}
		
		private void attach_BD_FilmRealisateurs(BD_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = this;
		}
		
		private void detach_BD_FilmRealisateurs(BD_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BD_Film = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_FilmActor")]
	public partial class BD_FilmActor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilm;
		
		private int _IDActor;
		
		private string _Role;
		
		private EntityRef<BD_Actor> _BD_Actor;
		
		private EntityRef<BD_Film> _BD_Film;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilmChanging(int value);
    partial void OnIDFilmChanged();
    partial void OnIDActorChanging(int value);
    partial void OnIDActorChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public BD_FilmActor()
		{
			this._BD_Actor = default(EntityRef<BD_Actor>);
			this._BD_Film = default(EntityRef<BD_Film>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFilm
		{
			get
			{
				return this._IDFilm;
			}
			set
			{
				if ((this._IDFilm != value))
				{
					if (this._BD_Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFilmChanging(value);
					this.SendPropertyChanging();
					this._IDFilm = value;
					this.SendPropertyChanged("IDFilm");
					this.OnIDFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDActor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDActor
		{
			get
			{
				return this._IDActor;
			}
			set
			{
				if ((this._IDActor != value))
				{
					if (this._BD_Actor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDActorChanging(value);
					this.SendPropertyChanging();
					this._IDActor = value;
					this.SendPropertyChanged("IDActor");
					this.OnIDActorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(50)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Actor_BD_FilmActor", Storage="_BD_Actor", ThisKey="IDActor", OtherKey="ID", IsForeignKey=true)]
		public BD_Actor BD_Actor
		{
			get
			{
				return this._BD_Actor.Entity;
			}
			set
			{
				BD_Actor previousValue = this._BD_Actor.Entity;
				if (((previousValue != value) 
							|| (this._BD_Actor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Actor.Entity = null;
						previousValue.BD_FilmActors.Remove(this);
					}
					this._BD_Actor.Entity = value;
					if ((value != null))
					{
						value.BD_FilmActors.Add(this);
						this._IDActor = value.ID;
					}
					else
					{
						this._IDActor = default(int);
					}
					this.SendPropertyChanged("BD_Actor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmActor", Storage="_BD_Film", ThisKey="IDFilm", OtherKey="ID", IsForeignKey=true)]
		public BD_Film BD_Film
		{
			get
			{
				return this._BD_Film.Entity;
			}
			set
			{
				BD_Film previousValue = this._BD_Film.Entity;
				if (((previousValue != value) 
							|| (this._BD_Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Film.Entity = null;
						previousValue.BD_FilmActors.Remove(this);
					}
					this._BD_Film.Entity = value;
					if ((value != null))
					{
						value.BD_FilmActors.Add(this);
						this._IDFilm = value.ID;
					}
					else
					{
						this._IDFilm = default(int);
					}
					this.SendPropertyChanged("BD_Film");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_FilmGenre")]
	public partial class BD_FilmGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilm;
		
		private int _IDGenre;
		
		private EntityRef<BD_Film> _BD_Film;
		
		private EntityRef<BD_Genre> _BD_Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilmChanging(int value);
    partial void OnIDFilmChanged();
    partial void OnIDGenreChanging(int value);
    partial void OnIDGenreChanged();
    #endregion
		
		public BD_FilmGenre()
		{
			this._BD_Film = default(EntityRef<BD_Film>);
			this._BD_Genre = default(EntityRef<BD_Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFilm
		{
			get
			{
				return this._IDFilm;
			}
			set
			{
				if ((this._IDFilm != value))
				{
					if (this._BD_Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFilmChanging(value);
					this.SendPropertyChanging();
					this._IDFilm = value;
					this.SendPropertyChanged("IDFilm");
					this.OnIDFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGenre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGenre
		{
			get
			{
				return this._IDGenre;
			}
			set
			{
				if ((this._IDGenre != value))
				{
					if (this._BD_Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGenreChanging(value);
					this.SendPropertyChanging();
					this._IDGenre = value;
					this.SendPropertyChanged("IDGenre");
					this.OnIDGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmGenre", Storage="_BD_Film", ThisKey="IDFilm", OtherKey="ID", IsForeignKey=true)]
		public BD_Film BD_Film
		{
			get
			{
				return this._BD_Film.Entity;
			}
			set
			{
				BD_Film previousValue = this._BD_Film.Entity;
				if (((previousValue != value) 
							|| (this._BD_Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Film.Entity = null;
						previousValue.BD_FilmGenres.Remove(this);
					}
					this._BD_Film.Entity = value;
					if ((value != null))
					{
						value.BD_FilmGenres.Add(this);
						this._IDFilm = value.ID;
					}
					else
					{
						this._IDFilm = default(int);
					}
					this.SendPropertyChanged("BD_Film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Genre_BD_FilmGenre", Storage="_BD_Genre", ThisKey="IDGenre", OtherKey="Id", IsForeignKey=true)]
		public BD_Genre BD_Genre
		{
			get
			{
				return this._BD_Genre.Entity;
			}
			set
			{
				BD_Genre previousValue = this._BD_Genre.Entity;
				if (((previousValue != value) 
							|| (this._BD_Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Genre.Entity = null;
						previousValue.BD_FilmGenres.Remove(this);
					}
					this._BD_Genre.Entity = value;
					if ((value != null))
					{
						value.BD_FilmGenres.Add(this);
						this._IDGenre = value.Id;
					}
					else
					{
						this._IDGenre = default(int);
					}
					this.SendPropertyChanged("BD_Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_FilmRealisateur")]
	public partial class BD_FilmRealisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDFilm;
		
		private int _IDReal;
		
		private EntityRef<BD_Film> _BD_Film;
		
		private EntityRef<BD_Realisateur> _BD_Realisateur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDFilmChanging(int value);
    partial void OnIDFilmChanged();
    partial void OnIDRealChanging(int value);
    partial void OnIDRealChanged();
    #endregion
		
		public BD_FilmRealisateur()
		{
			this._BD_Film = default(EntityRef<BD_Film>);
			this._BD_Realisateur = default(EntityRef<BD_Realisateur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFilm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDFilm
		{
			get
			{
				return this._IDFilm;
			}
			set
			{
				if ((this._IDFilm != value))
				{
					if (this._BD_Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDFilmChanging(value);
					this.SendPropertyChanging();
					this._IDFilm = value;
					this.SendPropertyChanged("IDFilm");
					this.OnIDFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReal", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDReal
		{
			get
			{
				return this._IDReal;
			}
			set
			{
				if ((this._IDReal != value))
				{
					if (this._BD_Realisateur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRealChanging(value);
					this.SendPropertyChanging();
					this._IDReal = value;
					this.SendPropertyChanged("IDReal");
					this.OnIDRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Film_BD_FilmRealisateur", Storage="_BD_Film", ThisKey="IDFilm", OtherKey="ID", IsForeignKey=true)]
		public BD_Film BD_Film
		{
			get
			{
				return this._BD_Film.Entity;
			}
			set
			{
				BD_Film previousValue = this._BD_Film.Entity;
				if (((previousValue != value) 
							|| (this._BD_Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Film.Entity = null;
						previousValue.BD_FilmRealisateurs.Remove(this);
					}
					this._BD_Film.Entity = value;
					if ((value != null))
					{
						value.BD_FilmRealisateurs.Add(this);
						this._IDFilm = value.ID;
					}
					else
					{
						this._IDFilm = default(int);
					}
					this.SendPropertyChanged("BD_Film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Realisateur_BD_FilmRealisateur", Storage="_BD_Realisateur", ThisKey="IDReal", OtherKey="Id", IsForeignKey=true)]
		public BD_Realisateur BD_Realisateur
		{
			get
			{
				return this._BD_Realisateur.Entity;
			}
			set
			{
				BD_Realisateur previousValue = this._BD_Realisateur.Entity;
				if (((previousValue != value) 
							|| (this._BD_Realisateur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BD_Realisateur.Entity = null;
						previousValue.BD_FilmRealisateurs.Remove(this);
					}
					this._BD_Realisateur.Entity = value;
					if ((value != null))
					{
						value.BD_FilmRealisateurs.Add(this);
						this._IDReal = value.Id;
					}
					else
					{
						this._IDReal = default(int);
					}
					this.SendPropertyChanged("BD_Realisateur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_Genre")]
	public partial class BD_Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<BD_FilmGenre> _BD_FilmGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public BD_Genre()
		{
			this._BD_FilmGenres = new EntitySet<BD_FilmGenre>(new Action<BD_FilmGenre>(this.attach_BD_FilmGenres), new Action<BD_FilmGenre>(this.detach_BD_FilmGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Genre_BD_FilmGenre", Storage="_BD_FilmGenres", ThisKey="Id", OtherKey="IDGenre")]
		public EntitySet<BD_FilmGenre> BD_FilmGenres
		{
			get
			{
				return this._BD_FilmGenres;
			}
			set
			{
				this._BD_FilmGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BD_FilmGenres(BD_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BD_Genre = this;
		}
		
		private void detach_BD_FilmGenres(BD_FilmGenre entity)
		{
			this.SendPropertyChanging();
			entity.BD_Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_News")]
	public partial class BD_New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Titre;
		
		private string _Contenu;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifDate;
		
		private System.Data.Linq.Binary _Image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitreChanging(string value);
    partial void OnTitreChanged();
    partial void OnContenuChanging(string value);
    partial void OnContenuChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifDateChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    #endregion
		
		public BD_New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Titre
		{
			get
			{
				return this._Titre;
			}
			set
			{
				if ((this._Titre != value))
				{
					this.OnTitreChanging(value);
					this.SendPropertyChanging();
					this._Titre = value;
					this.SendPropertyChanged("Titre");
					this.OnTitreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contenu", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Contenu
		{
			get
			{
				return this._Contenu;
			}
			set
			{
				if ((this._Contenu != value))
				{
					this.OnContenuChanging(value);
					this.SendPropertyChanging();
					this._Contenu = value;
					this.SendPropertyChanged("Contenu");
					this.OnContenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifDate
		{
			get
			{
				return this._ModifDate;
			}
			set
			{
				if ((this._ModifDate != value))
				{
					this.OnModifDateChanging(value);
					this.SendPropertyChanging();
					this._ModifDate = value;
					this.SendPropertyChanged("ModifDate");
					this.OnModifDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_Realisateur")]
	public partial class BD_Realisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private EntitySet<BD_FilmRealisateur> _BD_FilmRealisateurs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public BD_Realisateur()
		{
			this._BD_FilmRealisateurs = new EntitySet<BD_FilmRealisateur>(new Action<BD_FilmRealisateur>(this.attach_BD_FilmRealisateurs), new Action<BD_FilmRealisateur>(this.detach_BD_FilmRealisateurs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_Realisateur_BD_FilmRealisateur", Storage="_BD_FilmRealisateurs", ThisKey="Id", OtherKey="IDReal")]
		public EntitySet<BD_FilmRealisateur> BD_FilmRealisateurs
		{
			get
			{
				return this._BD_FilmRealisateurs;
			}
			set
			{
				this._BD_FilmRealisateurs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BD_FilmRealisateurs(BD_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BD_Realisateur = this;
		}
		
		private void detach_BD_FilmRealisateurs(BD_FilmRealisateur entity)
		{
			this.SendPropertyChanging();
			entity.BD_Realisateur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BD_STATUT")]
	public partial class BD_STATUT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<BD_Film> _BD_Films;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public BD_STATUT()
		{
			this._BD_Films = new EntitySet<BD_Film>(new Action<BD_Film>(this.attach_BD_Films), new Action<BD_Film>(this.detach_BD_Films));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BD_STATUT_BD_Film", Storage="_BD_Films", ThisKey="ID", OtherKey="status")]
		public EntitySet<BD_Film> BD_Films
		{
			get
			{
				return this._BD_Films;
			}
			set
			{
				this._BD_Films.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BD_Films(BD_Film entity)
		{
			this.SendPropertyChanging();
			entity.BD_STATUT = this;
		}
		
		private void detach_BD_Films(BD_Film entity)
		{
			this.SendPropertyChanging();
			entity.BD_STATUT = null;
		}
	}
}
#pragma warning restore 1591
